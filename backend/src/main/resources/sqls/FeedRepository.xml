<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.sinsengumi.feedich.repository.FeedRepository">

  <sql id="columns">
    ${tableName}.id             as feed_id
    , ${tableName}.title        as feed_title
    , ${tableName}.description  as feed_description
    , ${tableName}.url          as feed_url
    , ${tableName}.feed_url     as feed_feed_url
    , ${tableName}.feed_type    as feed_type
    , ${tableName}.icon         as feed_icon
    , ${tableName}.image        as feed_image
    , ${tableName}.favicon      as feed_favicon
    , ${tableName}.status       as feed_status
    , ${tableName}.published_at as feed_published_at
    , ${tableName}.created_at   as feed_created_at
    , ${tableName}.updated_at   as feed_updated_at
  </sql>

  <resultMap id="map" type="Feed">
    <id     property="id"          column="feed_id" />
    <result property="title"       column="feed_title" />
    <result property="description" column="feed_description" />
    <result property="url"         column="feed_url" />
    <result property="feedUrl"     column="feed_feed_url" />
    <result property="feedType"    column="feed_type" />
    <result property="icon"        column="feed_icon" />
    <result property="image"       column="feed_image" />
    <result property="favicon"     column="feed_favicon" />
    <result property="status"      column="feed_status" />
    <result property="publishedAt" column="feed_published_at" />
    <result property="createdAt"   column="feed_created_at" />
    <result property="updatedAt"   column="feed_updated_at" />
  </resultMap>

  <insert id="create" parameterType="Feed">
    insert into feed (
      title
      , description
      , url
      , feed_url
      , feed_type
      , icon
      , image
      , favicon
      , status
      , published_at
    ) values (
      #{title}
      , #{description}
      , #{url}
      , #{feedUrl}
      , #{feedType}
      , #{icon}
      , #{image}
      , #{favicon}
      , #{status}
      , #{publishedAt}
    )
    <selectKey resultType="_int" order="AFTER" keyProperty="id">
      select last_insert_id()
    </selectKey>
  </insert>


  <update id="update">
    update
      feed
    set
      title          = #{title}
      , description  = #{description}
      , url          = #{url}
      , feed_url     = #{feedUrl}
      , feed_type    = #{feedType}
      , icon         = #{icon}
      , image        = #{image}
      , favicon      = #{favicon}
      , status       = #{status}
      , published_at = #{publishedAt}
    where
      id = #{id}
  </update>

  <update id="updateStatus">
    update feed set status = #{status} where id = #{id}
  </update>

  <select id="findAll" resultMap="map">
    select
      <include refid="columns"><property name="tableName" value="f" /></include>
    from
      feed f
    order by
      f.id
  </select>

  <select id="findByFeedUrl" resultMap="map">
    select
      <include refid="columns"><property name="tableName" value="f" /></include>
    from
      feed f
    where
      f.feed_url = #{feedUrl}
  </select>

  <select id="getRecommendFeeds" resultMap="map">
    select
      <include refid="columns"><property name="tableName" value="f" /></include>
    from
      feed f
    where
      not exists (select 1 from subscription s where s.user_id = #{userId} and s.feed_id = f.id)
      and description is not null
      and description != ''
      and title != description
      and status = 'NORMAL'
      and published_at is not null
      and published_at > now() - INTERVAL 60 DAY
    order by
      rand()
    limit
      #{size}
  </select>
</mapper>
