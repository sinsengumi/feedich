<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.sinsengumi.feedich.repository.SubscriptionRepository">

  <sql id="columns">
    ${tableName}.id           as subscription_id
    , ${tableName}.user_id    as subscription_user_id
    , ${tableName}.feed_id    as subscription_feed_id
    , ${tableName}.created_at as subscription_created_at
    , ${tableName}.updated_at as subscription_updated_at
  </sql>

  <resultMap id="map" type="Subscription">
    <id     property="id"          column="subscription_id" />
    <result property="userId"      column="subscription_user_id" />
    <result property="feedId"      column="subscription_feed_id" />
    <result property="createdAt"   column="subscription_created_at" />
    <result property="updatedAt"   column="subscription_updated_at" />
    <result property="unreadCount" column="subscription_unread_count" />

    <association property="feed" resultMap="net.sinsengumi.feedich.repository.FeedRepository.map"/>
  </resultMap>

  <insert id="create" parameterType="Subscription">
    insert into subscription (
      user_id
      , feed_id
      , created_at
    ) values (
      #{userId}
      , #{feedId}
      , now()
    )
    <selectKey resultType="_int" order="AFTER" keyProperty="id">
      select last_insert_id()
    </selectKey>
  </insert>

  <select id="findByUserId" resultMap="map">
    select
      <include refid="columns"><property name="tableName" value="s" /></include>,
      <include refid="net.sinsengumi.feedich.repository.FeedRepository.columns"><property name="tableName" value="f" /></include>,
      (select count(1) from user_item ui where ui.user_id = #{userId} and ui.feed_id = f.id and ui.unread = 1) as subscription_unread_count
    from
      subscription s
      join feed f on (f.id = s.feed_id)
    where
      s.user_id = #{userId}
    order by
      s.created_at desc
  </select>

  <select id="findByUserIdAndFeedId" resultMap="map">
    select
      <include refid="columns"><property name="tableName" value="s" /></include>,
      <include refid="net.sinsengumi.feedich.repository.FeedRepository.columns"><property name="tableName" value="f" /></include>,
      (select count(1) from user_item ui where ui.user_id = #{userId} and ui.feed_id = f.id and ui.unread = 1) as subscription_unread_count
    from
      subscription s
      join feed f on (f.id = s.feed_id)
    where
      s.user_id = #{userId}
      and s.feed_id = #{feedId}
  </select>

  <select id="getSubscribeUsers" resultType="java.lang.Integer">
    select
      s.user_id
    from
      subscription s
    where
      s.feed_id = #{feedId}
    order by
      s.user_id
  </select>
</mapper>
